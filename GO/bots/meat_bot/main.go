package main

import (
	"log"
	"time"

	tele "gopkg.in/telebot.v4"
)

func main() {
	pref := tele.Settings{
		Token:  "",
		Poller: &tele.LongPoller{Timeout: 10 * time.Second},
	}

	b, err := tele.NewBot(pref)
	if err != nil {
		log.Fatal(err)
		return
	}

	// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
	setupMainKeyboard(b)

	b.Start()
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
func setupMainKeyboard(b *tele.Bot) {
	// –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
	mainKeyboard := &tele.ReplyMarkup{
		ResizeKeyboard: true,
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
	btnHelp := mainKeyboard.Text("‚Ñπ Help")
	btnSettings := mainKeyboard.Text("‚öô Settings")

	// –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥–∞—Ö
	mainKeyboard.Reply(
		mainKeyboard.Row(btnHelp),
		mainKeyboard.Row(btnSettings),
	)

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
	b.Handle("/start", func(c tele.Context) error {
		return c.Send("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", mainKeyboard)
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "Help"
	b.Handle(&btnHelp, func(c tele.Context) error {
		return c.Send("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å: ...")
	})

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "Settings"
	b.Handle(&btnSettings, func(c tele.Context) error {
		// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
		return setupSettingsKeyboard(c, b)
	})
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
func setupSettingsKeyboard(c tele.Context, b *tele.Bot) error {
	mainKeyboard := &tele.ReplyMarkup{
		ResizeKeyboard: true,
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
	btnHelp := mainKeyboard.Text("‚Ñπ Help")
	btnSettings := mainKeyboard.Text("‚öô Settings")

	// –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥–∞—Ö
	mainKeyboard.Reply(
		mainKeyboard.Row(btnHelp),
		mainKeyboard.Row(btnSettings),
	)

	// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
	settingsKeyboard := &tele.ReplyMarkup{
		ResizeKeyboard: true,
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
	btnProfile := settingsKeyboard.Text("üë§ Profile")
	btnNotifications := settingsKeyboard.Text("üîî Notifications")
	btnBack := settingsKeyboard.Text("‚¨Ö Back")

	// –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥–∞—Ö
	settingsKeyboard.Reply(
		settingsKeyboard.Row(btnProfile),
		settingsKeyboard.Row(btnNotifications),
		settingsKeyboard.Row(btnBack),
	)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
	if err := c.Send("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:", settingsKeyboard); err != nil {
		return err
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫
	b.Handle(&btnProfile, func(c tele.Context) error {
		return c.Send("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: ...")
	})

	b.Handle(&btnNotifications, func(c tele.Context) error {
		return c.Send("–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ...")
	})

	b.Handle(&btnBack, func(c tele.Context) error {
		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
		setupMainKeyboard(b)
		return c.Send("", mainKeyboard) // –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é:
	})

	return nil
}
